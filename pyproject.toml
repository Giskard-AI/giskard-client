# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "giskard-client"
version = "0.1.2"
description = "Inspect your AI models visually, find bugs, give feedback 🕵️‍♀️ 💬"
readme = "README.md"
authors = ["Giskard AI <hello@giskard.ai>"]
license = "Apache Software License 2.0"
repository = "https://github.com/Giskard-AI/giskard-client"
homepage = "https://github.com/Giskard-AI/giskard-client"

# Keywords description https://python-poetry.org/docs/pyproject/#keywords
keywords = [
  "Artificial Intelligence",
  "Machine Learning",
  "Quality",
  "MLOps"
]

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Operating System :: OS Independent",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.7",
]



[tool.poetry.dependencies]
python = ">=3.7.1,<3.8.0"
importlib_metadata = {version = "^4.5.0", python = "<3.8"}
pandas = ">=1.0.0 <2.0.0"
numpy = ">=1.19.0 <2.0.0"
scikit-learn = ">=0.22.0,<0.25.0"
pydantic = ">=1.7.1,<1.9.0"
typing-extensions = "^3.7.4"
cloudpickle = ">=1.3.0,<1.7.0"
api-client = "^1.3.1"
zstandard = "^0.15.2"
python-dotenv = "^0.17.0"
jupyter-http-over-ws = "^0.0.8"
ipywidgets = "^7.6.3"
types-requests = "^2.25.8"

[tool.poetry.dev-dependencies]
darglint = "^1.8.0"
isort = {extras = ["colors"], version = "^5.9.3"}
pyupgrade = "^2.24.0"
black = "^21.7b0"
mypy = "^0.910"
mypy-extensions = "^0.4.3"
bandit = "^1.7.0"
safety = "^1.10.3"
pytest = "^6.2.4"
pylint = "^2.10.2"
pydocstyle = "^6.1.1"
pre-commit = "^2.14.0"
flake8 = "^3.8.4"
jupyter = "^1.0.0"
jupyterlab = "^3.0.14"

[tool.black]
# https://github.com/psf/black
target-version = ["py37"]
line-length = 100
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 37
line_length = 100

known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = 3.7
pretty = true
show_traceback = true
color_output = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true


[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

[virtualenvs]
create = true
in-project = true
