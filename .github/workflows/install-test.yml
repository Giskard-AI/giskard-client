name: Python install

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.7", "3.8", "3.9", "3.10" ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache virtual environment
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ matrix.python-version }}-${{ hashFiles('poetry.lock')}}
          restore-keys: ${{ runner.os }}-venv-${{ matrix.python-version }}

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Make
        run: make

      - name: Replace local coverage.xml path by docker path for Sonar
        run: sed -i 's/\/home\/runner\/work\/giskard-client\/giskard-client\//\/github\/workspace\//g' coverage.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Set dev version
        uses: ciiiii/toml-editor@1.0.0
        with:
          file: "pyproject.toml"
          key: "tool.poetry.version"
          value: ${{ format('0.dev{0}', GITHUB_RUN_ID)}}

      - name: Build dev version
        run: |
          make build

      - name: Archive built artifacts
        uses: actions/upload-artifact@v3
        with:
          name: giskard-dev-${{ matrix.python-version }}.whl
          path: dist/*whl

